'use client';

import { useEffect, useState } from "react";
import { useAuth } from "@/context/AuthContext";
import { FaInfoCircle } from "react-icons/fa";
import { useProfile } from "@/hooks/useProfile";
import { ProfileInterface } from "@/modules/profile/interfaces";
import { toast, ToastContainer } from "react-toastify";

import 'react-toastify/dist/ReactToastify.css';
import { useCache } from "@/hooks/useCache";

export default function ProfilePage() {
  const { user, loading } = useAuth();
  const [userProfile, setUserProfile] = useState<ProfileInterface | null>(null);
  const { getProfile, setProfile } = useProfile();
  
  const { getCache } = useCache();

  // load userProfile
  useEffect(() => {
    if(loading) {
      setUserProfile(getCache("profile") as any);
    }

    (async () => {
      if (user) {
        const profile = await getProfile();
        setUserProfile(profile);
      }
    })();
  }, [user]);

  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    if (user && userProfile) {
      setProfile(userProfile)
        .then(() => {
          toast('Profile updated!', {
            position: "bottom-right",
            autoClose: 3000,
            closeOnClick: true,
            pauseOnHover: true,
          })
        })
    }
  };

  const handleChange = (event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {
    setUserProfile((prevProfile) => {
      if (prevProfile) {
        return {
          ...prevProfile,
          [event.target.name]: event.target.value,
        };
      } else {
        return { ...{} as ProfileInterface, [event.target.name]: event.target.value };
      }
    });
  };

  return (
    <div className="max-w-md mx-auto">
      <h1 className="text-3xl font-bold mb-4">Profile</h1>
      <form onSubmit={handleSubmit}>
        <label className="block mb-2" htmlFor="businessName">
          Business Name
        </label>
        <input
          type="text"
          id="businessName"
          name="businessName"
          className="w-full px-4 py-2 border rounded-md"
          value={userProfile?.businessName ?? ""}
          onChange={handleChange}
        />
        
        <label className="block mb-2" htmlFor="businessDescription">
          Business Description
        </label>
        <textarea
          id="businessDescription"
          name="businessDescription"
          className="w-full px-4 py-2 border rounded-md"
          value={userProfile?.businessDescription ?? ""}
          onChange={handleChange}
        />

        <label className="block mb-2" htmlFor="fcmToken">
          FCM Token
          <span
            className="ml-1 text-xs text-gray-500 hover:text-gray-700 transition duration-300 ease-in-out"
            title="This is the token used to send notifications to you. It's automatically generated by the app and should not be changed. Also, all of your clients have an unique FCM token."
          >
            <FaInfoCircle className="inline hover:cursor-pointer" size={16} />
          </span>
        </label>
        <input
          type="text"
          id="fcmToken"
          name="fcmToken"
          className="w-full px-4 py-2 border rounded-md bg-gray-100 text-gray-500 cursor-not-allowed"
          value={userProfile?.fcmToken ?? ""}
          disabled
        />

        <div>
          <button
            type="submit"
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md mt-4"
          >
            Save
          </button>
          <ToastContainer />
        </div>
      </form>
    </div>
  );
}
